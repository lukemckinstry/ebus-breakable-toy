#!/bin/bash

set -e

if [[ -n "${EBUSTRANSIT_DEBUG}" ]]; then
    set -x
fi

function usage() {
    echo -n \
        "Usage: $(basename "$0")
Build container images and execute database migrations.
"
}

function cleanup() {
    docker compose stop
}

trap cleanup ERR

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    if [ "${1:-}" = "--help" ]; then
        usage
    else
        # set permissions on volumes files to user
        sudo chown -R $(id -u $USER):$(id -u $USER) ./data/db
        
        # Build app container image first
        docker compose \
            -f docker-compose.yml \
            build ebus-client

        # Install frontend NPM modules
        docker compose \
            -f docker-compose.yml \
            run --rm --no-deps ebus-client \
            npm install

        # Build static asset bundle for React frontend
        # Separated to build app static assets before copied to django container
        docker compose \
            -f docker-compose.yml \
            run --rm --no-deps ebus-client \
            npm run build

        # Build django and db container images
        docker compose build db web

        # Bring up PostgreSQL and Django in a way that respects
        # configured service health checks.
        docker compose up -d db web

        # Apply any outstanding Django migrations
        docker compose exec web python manage.py migrate

        # Collect Django static files
        docker compose exec web python manage.py collectstatic --no-input

        #gather & load a sample gtfs file for testing purposes 
        docker compose exec web python manage.py loadfeeds --sample
        
        docker compose down
    fi
fi